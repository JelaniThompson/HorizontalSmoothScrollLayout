{"version":3,"sources":["js/demo3/index.js"],"names":["options","rootMargin","threshold","setTimeout","val","containerOneTarget","document","querySelector","containerTwoTarget","containerThreeTarget","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","console","log","classList","add","observe"],"mappings":"AAAA,IAAIA,OAAO,GAAG;AACVC,EAAAA,UAAU,EAAE,KADF;AAEVC,EAAAA,SAAS,EAAE;AAFD,CAAd;AAKAC,UAAU,CAAC,YAAM;AACb,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,kBAAkB,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAzB;AACA,MAAIC,kBAAkB,GAAGF,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAzB;AACA,MAAIE,oBAAoB,GAAGH,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAA3B;AAEA,MAAIG,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAASC,OAAT,EAAkBF,QAAlB,EAA4B;AAChEE,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACrB,UAAGA,KAAK,CAACC,cAAT,EAAyB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,YAAIb,GAAG,IAAI,CAAX,EAAc;AACVC,UAAAA,kBAAkB,CAACa,SAAnB,CAA6BC,GAA7B,CAAiC,kBAAjC;AACAf,UAAAA,GAAG;AACN,SAHD,MAGO,IAAIA,GAAG,IAAI,CAAX,EAAc;AACjBI,UAAAA,kBAAkB,CAACU,SAAnB,CAA6BC,GAA7B,CAAiC,kBAAjC;AACAf,UAAAA,GAAG;AACN,SAHM,MAGA;AACHK,UAAAA,oBAAoB,CAACS,SAArB,CAA+BC,GAA/B,CAAmC,kBAAnC;AACH;AACJ;AACJ,KAbD;AAcH,GAfc,EAeZnB,OAfY,CAAf;AAgBAU,EAAAA,QAAQ,CAACU,OAAT,CAAiBf,kBAAjB;AACAK,EAAAA,QAAQ,CAACU,OAAT,CAAiBZ,kBAAjB;AACAE,EAAAA,QAAQ,CAACU,OAAT,CAAiBX,oBAAjB;AACH,CAzBS,EAyBP,CAzBO,CAAV,EA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"demo3.b516845c.js","sourceRoot":"../src","sourcesContent":["let options = {\n    rootMargin: '0px',\n    threshold: 0.5\n}\n\nsetTimeout(() => {\n    let val = 0;\n    let containerOneTarget = document.querySelector(\"#container-one\");\n    let containerTwoTarget = document.querySelector(\"#container-two\");\n    let containerThreeTarget = document.querySelector(\"#container-three\");\n\n    let observer = new IntersectionObserver(function(entries, observer) {\n        entries.forEach(entry => {\n            if(entry.isIntersecting) {\n                console.log('intersecting');\n                if (val == 0) {\n                    containerOneTarget.classList.add('container-unhide');\n                    val++;\n                } else if (val == 1) {\n                    containerTwoTarget.classList.add('container-unhide');\n                    val++;\n                } else {\n                    containerThreeTarget.classList.add('container-unhide');\n                }\n            }\n        });\n    }, options);\n    observer.observe(containerOneTarget);\n    observer.observe(containerTwoTarget);\n    observer.observe(containerThreeTarget);\n}, 0);\n\n// let observer = new IntersectionObserver(callback, options)\n// observer.observe(options.root);\n\n/* \n    See if interacting with first or last item\n    Trigger boolean for checking if at start or end\n    in order to enable vertical scroll\n*/\n"]}